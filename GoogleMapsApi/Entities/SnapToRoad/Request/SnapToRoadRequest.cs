using GoogleMapsApi.Entities.Common;
using GoogleMapsApi.StaticMaps.Entities;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;

namespace GoogleMapsApi.Entities.SnapToRoad.Request
{
	/// <summary>
	/// The Google Places API is a service that returns information about a "place" (hereafter referred to as a Place) — defined within this API as an establishment, a geographic location, or prominent point of interest — using an HTTP request. Place requests specify locations as latitude/longitude coordinates.
	/// Two basic Place requests are available: a Place Search request and a Place Details request. Generally, a Place Search request is used to return candidate matches, while a Place Details request returns more specific information about a Place.
	/// This service is designed for processing place requests generated by a user for placement of application content on a map; this service is not designed to respond to batch of offline queries, which are a violation of its terms of use.
	/// </summary>
	public class SnapToRoadRequest : MapsBaseRequest
	{
		protected internal override string BaseUrl
		{
			get
			{
				return "roads.googleapis.com/v1/snapToRoads/";
			}
		}

		public IEnumerable<ILocationString> Path { get; set; } //Required
		
		public bool? Interpolate { get; set; }
		protected override QueryStringParametersList GetQueryStringParameters()
		{
			if (Path == null)
				throw new ArgumentException("Must specify a Path");
			var parameters = base.GetQueryStringParameters();

			IEnumerable<string> x = Path.Select(p => p.LocationString);
			parameters.Add("path", String.Join('|', x));


			if (Interpolate != null) parameters.Add("interpolate", Interpolate.ToString());

			return parameters;
		}
		public override Uri GetUri()
		{
			string scheme = IsSSL ? "https://" : "http://";

			var queryString = GetQueryStringParameters().GetQueryStringPostfix();
			return new Uri(scheme + BaseUrl + "?" + queryString);
		}
	}
}
